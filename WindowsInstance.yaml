AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Windows Template
Parameters:
  myVPC: 
    Description: Amazon VPCs
    Type: "AWS::EC2::VPC::Id"
  mySubnet: 
    Description: Amazon Subnets
    Type: "AWS::EC2::Subnet::Id"
  mytagvalue: 
    Description: Insert a name for you EC2 Instance - REQUIRED
    Type: "String"
    AllowedPattern: ".+"
  InstanceType:
    Description: Windows EC2 Instance Type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
Mappings:
  RegionMap: 
    us-east-1: 
      HVM64: "ami-0229f7666f517b31e"
    sa-east-1: 
      HVM64: "ami-0378a9d5ce02e41c5"
Resources:
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub Windows-SSMRoletoEC2-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - 
          Ref: IAMRole

  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds: 
        - !Ref InstanceSecurityGroup
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - HVM64
      SubnetId: !Ref mySubnet
      IamInstanceProfile: !Ref InstanceProfile
      Tags:
        - Key: Name
          Value: !Ref mytagvalue
        - Key: Project
          Value: internalpoc
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable RDP access via port 3389
      VpcId: !Ref myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - AvailabilityZone
  IAMRole:
    Value: !Ref IAMRole
  InstanceProfile:
    Value: !Ref InstanceProfile
  InstanceSecurityGroup:
    Value: !Ref InstanceSecurityGroup
