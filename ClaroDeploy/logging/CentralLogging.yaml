AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Set up roles, logs destination, kinesis and delivery stream for centralizing
  logs to S3 in centralized logging account
Resources:
  LoggingS3Bucket:
    Type: 'AWS::S3::Bucket'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      BucketName: !Join 
        - '-'
        - - logging-central
          - !Select 
            - 0
            - !Split 
              - '-'
              - !Select 
                - 2
                - !Split 
                  - /
                  - !Ref 'AWS::StackId'
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: IsUsedForDeploy
          Value: 'True'
  CWLBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref LoggingS3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Principal: '*'
            Resource:
              - !GetAtt 
                - LoggingS3Bucket
                - Arn
              - !Join 
                - ''
                - - !GetAtt 
                    - LoggingS3Bucket
                    - Arn
                  - /*
            Condition:
              StringEquals:
                'aws:PrincipalOrgID': o-pbzw9nb9fe
          - Action:
              - 's3:ListBucket'
            Effect: Allow
            Principal: '*'
            Resource:
              - !GetAtt 
                - LoggingS3Bucket
                - Arn
              - !Join 
                - ''
                - - !GetAtt 
                    - LoggingS3Bucket
                    - Arn
            Condition:
              StringEquals:
                'aws:PrincipalOrgID': o-pbzw9nb9fe
  CWLtoFirehoseRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service:
                - logs.sa-east-1.amazonaws.com
                - logs.ca-central-1.amazonaws.com
                - logs.us-east-1.amazonaws.com
                - logs.us-east-2.amazonaws.com
                - logs.us-west-1.amazonaws.com
                - logs.us-west-2.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
  CWLtoFirehosePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: CWL_to_Kinesis_Policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'firehose:PutRecord'
            Resource:
              - !GetAtt 
                - FirehoseLoggingDeliveryStream
                - Arn
          - Effect: Allow
            Action:
              - 'iam:PassRole'
            Resource:
              - !GetAtt 
                - CWLtoFirehoseRole
                - Arn
      Roles:
        - !Ref CWLtoFirehoseRole
  FirehoseDeliveryRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref 'AWS::AccountId'
  FirehoseDeliveryPolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn: LoggingS3Bucket
    Properties:
      PolicyName: Firehose_Delivery_Policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:AbortMultipartUpload'
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:ListBucketMultipartUploads'
              - 's3:PutObject'
              - 'lambda:*'
            Effect: Allow
            Resource:
              - !GetAtt 
                - LoggingS3Bucket
                - Arn
              - !Join 
                - ''
                - - !GetAtt 
                    - LoggingS3Bucket
                    - Arn
                  - /*
          - Action:
              - 'lambda:GetFunctionConfiguration'
              - 'lambda:InvokeFunction'
            Effect: Allow
            Resource: !GetAtt 
              - FirehoseDataProcessorFunction
              - Arn
      Roles:
        - !Ref FirehoseDeliveryRole
  LogDestination:
    Type: 'AWS::Logs::Destination'
    DependsOn:
      - FirehoseLoggingDeliveryStream
      - CWLtoFirehoseRole
      - CWLtoFirehosePolicy
    Properties:
      DestinationName: CentralLogDestination
      RoleArn: !GetAtt 
        - CWLtoFirehoseRole
        - Arn
      TargetArn: !GetAtt 
        - FirehoseLoggingDeliveryStream
        - Arn
      DestinationPolicy: >-
        {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"AWS":["266569595191","221629670022","417359929391","930317599068","963176782432"]},"Action":"logs:PutSubscriptionFilter","Resource":"arn:aws:logs:us-east-1:790824317059:destination:CentralLogDestination"}]}
  FirehoseLambdaRoleDefaultPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Effect: Allow
            Resource: 'arn:aws:logs:*:*:*'
        Version: 2012-10-17
      PolicyName: FirehoseLambdaRoleDefaultPolicy
      Roles:
        - !Ref FirehoseLambdaRole
  FirehoseLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      Path: /
  FirehoseDataProcessorFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: cf-templates-1jvhfxvns5iwf-sa-east-1
        S3Key: lambdas/index.zip
      Handler: index.handler
      Role: !GetAtt 
        - FirehoseLambdaRole
        - Arn
      Runtime: nodejs12.x
      FunctionName: data-processor-function
      Timeout: 120
    DependsOn:
      - FirehoseLambdaRoleDefaultPolicy
      - FirehoseLambdaRole
  FirehoseLoggingDeliveryStream:
    Type: 'AWS::KinesisFirehose::DeliveryStream'
    DependsOn:
      - FirehoseDeliveryRole
      - FirehoseDeliveryPolicy
      - FirehoseDataProcessorFunction
    Properties:
      DeliveryStreamName: Centralized-Logging-Delivery-Stream
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !GetAtt 
          - LoggingS3Bucket
          - Arn
        BufferingHints:
          IntervalInSeconds: '300'
          SizeInMBs: '50'
        CompressionFormat: UNCOMPRESSED
        ErrorOutputPrefix: CentralLogs/AWSLogs/Error/
        Prefix: CentralizedAccountLogs/AWSLogs/
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Parameters:
                - ParameterName: LambdaArn
                  ParameterValue: !GetAtt 
                    - FirehoseDataProcessorFunction
                    - Arn
              Type: Lambda
        RoleARN: !GetAtt 
          - FirehoseDeliveryRole
          - Arn
Outputs:
  DestinationArnExport:
    Description: ARN for the LogDestination
    Export:
      Name: LogDestinationArn
    Value: !GetAtt 
      - LogDestination
      - Arn
