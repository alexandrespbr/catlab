AWSTemplateFormatVersion: 2010-09-09
Description: Baseline Resources for Service Catalog - 22/12

Resources:
#portfolio creation
  BaselinePortfolio:
    Type: "AWS::ServiceCatalog::Portfolio"
    Properties:
      DisplayName: "BaselinePortfolio"
      AcceptLanguage: "en"
      Description: "A portfolio of self-service AWS products."
      ProviderName: "IT"

#products creation
# you can find samples templates on https://github.com/aws-samples/aws-service-catalog-reference-architectures

  VPCProduct:
    Type: "AWS::ServiceCatalog::CloudFormationProduct"
    Properties:
      AcceptLanguage: "en"
      Description: "This product builds one Amazon VPC for Embratel Workloads"
      Distributor: "Amazon"
      Name: "Amazon VPC with Public and Private Subnets"
      Owner: "IT Services"
      SupportEmail: "mspembratel@operacaomulticloud.com"
      SupportUrl: "https://www.amazon.com"
      SupportDescription: "Support Description"
      ProvisioningArtifactParameters:
      -
        Description: "VPC"
        Name: "VPC"
        Info:
          LoadTemplateFromURL : "https://raw.githubusercontent.com/alexandrespbr/catlab/main/vpc.yaml"
          #LoadTemplateFromURL : "https://s3.amazonaws.com/Embratel-sa-servicecatalogtemplates/Embratel-vpc.json"

  EC2LinuxProduct:
    Type: "AWS::ServiceCatalog::CloudFormationProduct"
    Properties:
      AcceptLanguage: "en"
      Description: "This product builds one Amazon Linux EC2 instance and create a SSM patch baseline, maintenance window, and patch task to scan for and install operating system updates the EC2 instance."
      Distributor: "Amazon"
      Name: "Amazon Elastic Compute Cloud (EC2) Linux"
      Owner: "IT Services"
      SupportEmail: "mspembratel@operacaomulticloud.com"
      SupportUrl: "https://www.amazon.com"
      SupportDescription: "Support Description"
      ProvisioningArtifactParameters:
      -
        Description: "Linux EC2 Instance"
        Name: "Linux EC2 Instance"
        Info:
          LoadTemplateFromURL : "https://raw.githubusercontent.com/alexandrespbr/catlab/main/LinuxInstance.yaml"
          #LoadTemplateFromURL : "https://s3.amazonaws.com/Embratel-sa-servicecatalogtemplates/ec2-linux-ssm.json"

  EC2WindowsProduct:
    Type: "AWS::ServiceCatalog::CloudFormationProduct"
    Properties:
      AcceptLanguage: "en"
      Description: "This product builds one Amazon Windows EC2 instance and create a SSM patch baseline, maintenance window, and patch task to scan for and install operating system updates the EC2 instance."
      Distributor: "Amazon"
      Name: "Amazon Elastic Compute Cloud (EC2) Windows"
      Owner: "IT Services"
      SupportEmail: "mspembratel@operacaomulticloud.com"
      SupportUrl: "https://www.amazon.com"
      SupportDescription: "Support Description"
      ProvisioningArtifactParameters:
      -
        Description: "Windows EC2 Instance"
        Name: "Windows EC2 Instance"
        Info:
          LoadTemplateFromURL : "https://raw.githubusercontent.com/alexandrespbr/catlab/main/WindowsInstance.yaml"
          #LoadTemplateFromURL : "https://s3.amazonaws.com/Embratel-sa-servicecatalogtemplates/ec2-windows-ssm.json"

  MysqlProduct:
    Type: "AWS::ServiceCatalog::CloudFormationProduct"
    Properties:
      AcceptLanguage: "en"
      Description: "This product builds one RDS MySql Instance."
      Distributor: "Amazon"
      Name: "Relation Database Service MySql Server"
      Owner: "IT Services"
      SupportEmail: "mspembratel@operacaomulticloud.com"
      SupportUrl: "https://www.amazon.com"
      SupportDescription: "Support Description"
      ProvisioningArtifactParameters:
      -
        Description: "RDS MySql Server"
        Name: "RDS MySql Server"
        Info:
          LoadTemplateFromURL : "https://raw.githubusercontent.com/aws-samples/aws-service-catalog-reference-architectures/master/rds/sc-rds-mysql-ra.json"

#association between products and portfolio

  LinuxAssociation:
    Type: "AWS::ServiceCatalog::PortfolioProductAssociation"
    Properties:
      ProductId: !Ref EC2LinuxProduct
      PortfolioId: !Ref BaselinePortfolio

  WindowsAssociation:
    Type: "AWS::ServiceCatalog::PortfolioProductAssociation"
    Properties:
      ProductId: !Ref EC2WindowsProduct
      PortfolioId: !Ref BaselinePortfolio

  VPCAssociation:
     Type: "AWS::ServiceCatalog::PortfolioProductAssociation"
     Properties:
       ProductId: !Ref VPCProduct
       PortfolioId: !Ref BaselinePortfolio

  RdsMySqlAssociation:
     Type: "AWS::ServiceCatalog::PortfolioProductAssociation"
     Properties:
       ProductId: !Ref MysqlProduct
       PortfolioId: !Ref BaselinePortfolio
  
# IAM group with access on portfolio to run the products provisioning
  OperationGroup:
    Type: "AWS::IAM::Group"
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSServiceCatalogEndUserFullAccess

  BaselinePortfolioPrincipalAssociation01:
    Type: "AWS::ServiceCatalog::PortfolioPrincipalAssociation"
    Properties:
      PortfolioId: !Ref BaselinePortfolio
      PrincipalARN: !GetAtt OperationGroup.Arn
      PrincipalType: "IAM"

  BaselinePortfolioOrgPrincipalAssociation02:
    Type: "AWS::ServiceCatalog::PortfolioPrincipalAssociation"
    Properties:
      PortfolioId: !Ref BaselinePortfolio
      PrincipalARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/AWSControlTowerExecution"
      PrincipalType: "IAM"

  BaselinePortfolioOrgPrincipalAssociation03:
    Type: "AWS::ServiceCatalog::PortfolioPrincipalAssociation"
    Properties:
      PortfolioId: !Ref BaselinePortfolio
      PrincipalARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/Admin"
      PrincipalType: "IAM"

#default tags values
  VpcTagOption:
    Type: "AWS::ServiceCatalog::TagOption"
    Properties:
      Key: "Project"
      Value: "Dev"

  LinuxInstaceTypeTagOption:
    Type: "AWS::ServiceCatalog::TagOption"
    Properties:
      Key: "InstanceType"
      Value: "Linux"

  WindowsInstanceTypeOption:
    Type: "AWS::ServiceCatalog::TagOption"
    Properties:
      Key: "InstanceType"
      Value: "Windows"

  isDeployedbySC:
    Type: "AWS::ServiceCatalog::TagOption"
    Properties:
      Key: "deployedBy"
      Value: "serviceCatalog"

  LinuxInstaceTypeTagOptionAssociation:
    Type: "AWS::ServiceCatalog::TagOptionAssociation"
    Properties:
      ResourceId: !Ref EC2LinuxProduct
      TagOptionId: !Ref LinuxInstaceTypeTagOption

  LinuxInstaceTypeTagOptionAssociation02:
    Type: "AWS::ServiceCatalog::TagOptionAssociation"
    Properties:
      ResourceId: !Ref EC2LinuxProduct
      TagOptionId: !Ref isDeployedbySC

  WindowsInstaceTypeTagOptionAssociation:
    Type: "AWS::ServiceCatalog::TagOptionAssociation"
    Properties:
      ResourceId: !Ref EC2WindowsProduct
      TagOptionId: !Ref WindowsInstanceTypeOption

  WindowsInstaceTypeTagOptionAssociation02:
    Type: "AWS::ServiceCatalog::TagOptionAssociation"
    Properties:
      ResourceId: !Ref EC2WindowsProduct
      TagOptionId: !Ref isDeployedbySC

  VPCProductTagOptionAssociation:
    Type: "AWS::ServiceCatalog::TagOptionAssociation"
    Properties:
      ResourceId: !Ref VPCProduct
      TagOptionId: !Ref VpcTagOption

  VPCProductTagOptionAssociation02:
    Type: "AWS::ServiceCatalog::TagOptionAssociation"
    Properties:
      ResourceId: !Ref VPCProduct
      TagOptionId: !Ref isDeployedbySC

#Prducts constraints association
  VPCBaselineLaunchConstraint:
    Type: "AWS::ServiceCatalog::LaunchRoleConstraint"
    Properties:
      Description: "Allows the product to launch with the policies granted by the associated role."
      PortfolioId: !Ref BaselinePortfolio
      ProductId: !Ref VPCProduct
      RoleArn: !GetAtt LaunchConstraintRole.Arn
    DependsOn: VPCAssociation

  LinuxLaunchConstraint:
    Type: "AWS::ServiceCatalog::LaunchRoleConstraint"
    Properties:
      Description: "Allows the product to launch with the policies granted by the associated role."
      PortfolioId: !Ref BaselinePortfolio
      ProductId: !Ref EC2LinuxProduct
      RoleArn: !GetAtt LaunchConstraintRole.Arn
    DependsOn: LinuxAssociation

  WindowsLaunchConstraint:
    Type: "AWS::ServiceCatalog::LaunchRoleConstraint"
    Properties:
      Description: "Allows the product to launch with the policies granted by the associated role."
      PortfolioId: !Ref BaselinePortfolio
      ProductId: !Ref EC2WindowsProduct
      RoleArn: !GetAtt LaunchConstraintRole.Arn
    DependsOn: WindowsAssociation

  RdsMysqlLaunchConstraint:
    Type: "AWS::ServiceCatalog::LaunchRoleConstraint"
    Properties:
      Description: "Allows the product to launch with the policies granted by the associated role."
      PortfolioId: !Ref BaselinePortfolio
      ProductId: !Ref MysqlProduct
      RoleArn: !GetAtt LaunchConstraintRole.Arn
    DependsOn: RdsMySqlAssociation

#constraint role with SC permission to provisioning AWS services
#TODO: Embratel TEAM MUST REVIEW THIS PERMISSIONS

  LaunchConstraintRole:
    Type: "AWS::IAM::Role"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F38
            reason: "Service Catalog Requirement"
          - id: F3
            reason: "Service Catalog Requirement"
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "servicecatalog.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "AllowProductLaunch"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: "Allow"
                Action:
                  # Permissions required for the provisioning the products
                  - rds:*
                  - ec2:*
                  - s3:*
                  - ssm:*
                  - iam:*
                  - lambda:*
                  - kms:*
                  - cloudformation:*
                  - servicecatalog:*
              - Resource:
                  - "arn:aws:cloudformation:*:*:stack/SC-*"
                  - "arn:aws:cloudformation:*:*:changeSet/SC-*"
                Effect: "Allow"
                Action:
                  # Permissions required by AWS Service Catalog to create stack
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStacks
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - cloudformation:UpdateStack
              - Resource: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${OperationCreatedTopic.TopicName}"
                Effect: "Allow"
                Action:
                  - sns:Publish

#SNS topic notification when a new product is provisioned
  OperationCreatedTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: "Operation Product Created"

  # OperationCreatedSubscription:
  #   Type: "AWS::SNS::Subscription"
  #   Properties:
  #     TopicArn: !Ref OperationCreatedTopic
  #     Endpoint: andrdal@amazon.com
  #     Protocol: email

  VPCCreatedLaunchNotification:
    Type: "AWS::ServiceCatalog::LaunchNotificationConstraint"
    Properties:
      Description: "Publishes notifications when a EC2 Linux is provisioned."
      NotificationArns:
        - !Ref OperationCreatedTopic
      PortfolioId: !Ref BaselinePortfolio
      ProductId: !Ref EC2LinuxProduct
    DependsOn: LinuxAssociation
