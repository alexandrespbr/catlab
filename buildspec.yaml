version: 0.2
env:
  variables:
    AWS_ACCOUNT_ID: "400433519704"
    EKS_NAME: "msp-eks-embratel"
phases:
  install: # Install AWS cli, kubectl (needed for Helm) and Helm
    commands:
      - apk add --no-cache python3 py3-pip && pip3 install --upgrade pip && pip3 install awscli && rm -rf /var/cache/apk/* 
      - apk add --no-cache curl wget     
      - curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
      - chmod +x ./aws-iam-authenticator
      - mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - wget https://get.helm.sh/helm-v3.5.0-linux-amd64.tar.gz -O helm.tar.gz; tar -xzf helm.tar.gz
      - chmod +x ./linux-amd64/helm
      - mv ./linux-amd64/helm /usr/local/bin/helm
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done" 
  pre_build: # Add kubeconfig to access to EKS cluster 
    commands:
      - mkdir ~/.kube/ 
      - aws eks --region $AWS_REGION update-kubeconfig --name $EKS_NAME 
  build: # Build Docker image and tag it with the commit sha 
    commands:
      - docker build ./app/logstash/ -t $REPOSITORY_NAME-logstash:$CODEBUILD_BUILD_NUMBER 
      - docker build ./app/elastalert/ -t $REPOSITORY_NAME-elastalert:$CODEBUILD_BUILD_NUMBER 
      - docker build ./app/kafdrop/ -t $REPOSITORY_NAME-kafdrop:$CODEBUILD_BUILD_NUMBER 
      - export AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID
      - docker tag $REPOSITORY_NAME-logstash:$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME-logstash:$CODEBUILD_BUILD_NUMBER
      - docker tag $REPOSITORY_NAME-elastalert:$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME-elastalert:$CODEBUILD_BUILD_NUMBER
      - docker tag $REPOSITORY_NAME-kafdrop:$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME-kafdrop:$CODEBUILD_BUILD_NUMBER
  post_build: # Push the Docker image to the ECR
    commands:
      - eval $(aws ecr get-login --no-include-email --region $AWS_REGION | sed 's|https://||')
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME-logstash:$CODEBUILD_BUILD_NUMBER
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME-elastalert:$CODEBUILD_BUILD_NUMBER
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME-kafdrop:$CODEBUILD_BUILD_NUMBER
      - helm upgrade --create-namespace --install logstash --namespace logstash ./helm/logstash --set image.repository=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME-logstash --set image.tag=$CODEBUILD_BUILD_NUMBER
      - helm upgrade --create-namespace --install elastalert --namespace elastalert ./helm/elastalert --set image.repository=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME-elastalert --set image.tag=$CODEBUILD_BUILD_NUMBER      
      - helm upgrade --create-namespace --install kafdrop --namespace kafdrop ./helm/kafdrop --set image.repository=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME-kafdrop --set image.tag=$CODEBUILD_BUILD_NUMBER            